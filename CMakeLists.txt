cmake_minimum_required(VERSION 3.15)

project(arkana LANGUAGES CXX)
cmake_policy(SET CMP0091 NEW)
message(STATUS "CMAKE_CXX_COMPILER_ID: ${CMAKE_CXX_COMPILER_ID}")

## OPTIONS
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib CACHE PATH "")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib CACHE PATH "")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin CACHE PATH "")
set(BUILD_WITH_STATIC_MSVC_CRT OFF CACHE BOOL "")

## SYSTEM CONFIG
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF) 
set(CMAKE_DEBUG_POSTFIX d)

## Warning compile option
if ( "${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC" 
  OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel"
  OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "IntelLLVM")
  if(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
    string(REGEX REPLACE "/W[0-4]" "/W4" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
  else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
  endif()
elseif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wno-long-long -fstrict-aliasing")
endif ()

## REFERENCE TO MAIN PROJECT
include_directories(${CMAKE_CURRENT_SOURCE_DIR})

## LIB PROJECT
add_subdirectory(arkana)

## TEST PROJECT
add_subdirectory(arkana-test)
set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT arkana-test)
